#summary Stuff I want to do
#labels Featured

Bagnon:
  * Modernize codebase.

Bagnon_Forever:
  * Need to deal with links that include player levels (maybe)
  * Store token information
  * Crazy town: Implement guild bank support

Combuctor:
  * Switch to using bag sounds instead of merchant frame sounds
  * Implement better set API
  * Add in event-> tab event system (ex, show bank frame, normal tab when showing the bank, keyring when I click the keyring, trade bags...)
  * Add in a few configuration options

[Dominos]:
  * Revise wiki, add FAQ
  * Make a possess bar.  By a possess bar, I mean a bar that hijacks either the pet or action bar buttons (including stealing hotkeys while its up) when controlling a vehicle/possessing a dude.
  * Implement cooldown displays for buffs/debuffs on buttons.
  * Make Dominos have a saner layout when switching between 1-120 bars.  This includes adding a slider for numbars/numbuttons
  * Clean up the auto fading and showstate interfaces.  
  * Crazy town: custom state headers.

Ludwig:
  * Modernize codebase
  * Add in spell and talent link support

OmniCC:
  * Return of the shine option?

Sage:
  * Rewrite for 3.0
  * Make buff display better (fix icons, show all debuffs, but give mine a bigger icon)
  * Implement forced visibility state code (so that I can make party frames not show wheen in a raid, etc)
  * Use a template system of some sort to make it easier to create new jambers
  * Refactor code.  Events -> processor -> unit widgets

SellFish:
  * Update whenever there's an itemprice update
  * Write an armory scraper if itemprice updates stop again

Tipachu:
  * Fix if it breaks

Crazy Town - These are ideas I have that may either be entirely new things, impossible, or some combination of both:
  * Build a unit frame designer & runner pair of addons.  Suck at making unitframes? Just download ones someone else has used the designer to make.
  * Create an action bar addon based on a modal layout system.  Instead of telling Dominos: "switch to this bar when in form x" you instead specify a state ([form1]), then draw your bars, and attach spells.  Basically, in this system, you have a completely different UI based on what state you're in.  Blizzard implemented such a system with the vehicle and non vehicle UIs.